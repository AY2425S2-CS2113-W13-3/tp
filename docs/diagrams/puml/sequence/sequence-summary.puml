@startuml
!theme plain
skinparam sequenceMessageAlign center
skinparam responseMessageBelowArrow true
skinparam lifelineStrategy nosolid

actor ":User" as User
participant ":Ui" as UI
participant ":FinBro" as FinBro
participant ":Parser" as Parser
participant ":SummaryCommand" as SummaryCommand
participant ":TransactionManager" as TransactionMgr

User -> UI : input command
activate UI

UI -> FinBro : readCommand()
activate FinBro

FinBro -> Parser : parseCommandWord(userInput, ui)
activate Parser
note right: Parse "summary"

Parser -> Parser : parseSummaryCommand(ui)
activate Parser

Parser -> UI : readMonthYear()
activate UI
UI -> User : request month, year
activate User
User --> UI : input month, year
deactivate User
UI --> Parser : month, year
deactivate UI

create SummaryCommand
Parser -> SummaryCommand : new SummaryCommand(month, year)
activate SummaryCommand
SummaryCommand --> Parser : command
deactivate SummaryCommand
Parser --> Parser : command
deactivate Parser
Parser --> FinBro : command
deactivate Parser

FinBro -> SummaryCommand : execute(transactionManager, ui, storage)
activate SummaryCommand

SummaryCommand -> TransactionMgr : getMonthlyTotalIncome(month, year)
activate TransactionMgr
TransactionMgr --> SummaryCommand : totalIncome
deactivate TransactionMgr

SummaryCommand -> TransactionMgr : getMonthlyTotalExpenses(month, year)
activate TransactionMgr
TransactionMgr --> SummaryCommand : totalExpenses
deactivate TransactionMgr

SummaryCommand -> TransactionMgr : getMonthlyCategorisedExpenses(month, year)
activate TransactionMgr
TransactionMgr --> SummaryCommand : categorisedExpenses
deactivate TransactionMgr

SummaryCommand -> TransactionMgr : getMonthlyTaggedTransactions(month, year)
activate TransactionMgr
TransactionMgr --> SummaryCommand : taggedTransactions
deactivate TransactionMgr

SummaryCommand -> SummaryCommand : formatSummaryReport(totalIncome, totalExpenses, categorisedExpenses, taggedTransactions)
activate SummaryCommand
note right: Self-call to format summary report
SummaryCommand --> SummaryCommand : formattedReport
deactivate SummaryCommand

SummaryCommand --> FinBro : result message
deactivate SummaryCommand

FinBro -> UI : showMessage(result)
activate UI
UI --> User : display result
UI --> FinBro
deactivate UI
deactivate FinBro

@enduml