@startuml
!theme plain
skinparam sequenceMessageAlign center
skinparam responseMessageBelowArrow true
skinparam lifelineStrategy nosolid

actor ":User" as User
participant ":Ui" as UI
participant ":FinBro" as FinBro
participant ":Parser" as Parser
participant ":ListCommand" as ListCommand
participant ":TransactionManager" as TransactionMgr

User -> UI : input command
activate UI

UI -> FinBro : readCommand()
activate FinBro

FinBro -> Parser : parseCommandWord(userInput, ui)
activate Parser
note right: Parse "list"

Parser -> Parser : parseListCommand(ui)
activate Parser

Parser -> UI : readStartDate()
activate UI
UI -> User : request start date
activate User
User --> UI : input start date
deactivate User
UI --> Parser : startDate
deactivate UI

Parser -> UI : readLimit()
activate UI
UI -> User : request limit
activate User
User --> UI : input limit
deactivate User
UI --> Parser : limit
deactivate UI

create ListCommand
Parser -> ListCommand : new ListCommand(limit, date)
activate ListCommand
ListCommand --> Parser : command
deactivate ListCommand
Parser --> Parser : command
deactivate Parser
Parser --> FinBro : command
deactivate Parser

FinBro -> ListCommand : execute(transactionManager, ui, storage)
activate ListCommand

alt date provided
    ListCommand -> TransactionMgr : listTransactionsFromDate(date)
    activate TransactionMgr
    TransactionMgr --> ListCommand : filteredTransactions
    deactivate TransactionMgr

    alt limit provided
        ListCommand -> ListCommand : applyLimit(filteredTransactions, limit)
        activate ListCommand
        note right: Self-call to apply limit
        ListCommand --> ListCommand : limitedTransactions
        deactivate ListCommand
    end
else no date
    alt limit provided
        ListCommand -> TransactionMgr : listTransactions(limit)
        activate TransactionMgr
        TransactionMgr --> ListCommand : limitedTransactions
        deactivate TransactionMgr
    else no limit
        ListCommand -> TransactionMgr : listTransactions()
        activate TransactionMgr
        TransactionMgr --> ListCommand : allTransactions
        deactivate TransactionMgr
    end
end

ListCommand -> ListCommand : formatTransactionList(transactions)
activate ListCommand
note right: Self-call to format list
ListCommand --> ListCommand : formattedList
deactivate ListCommand

ListCommand --> FinBro : result message
deactivate ListCommand

FinBro -> UI : showMessage(result)
activate UI
UI --> User : display result
UI --> FinBro
deactivate UI
deactivate FinBro

@enduml