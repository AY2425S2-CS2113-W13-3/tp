@startuml
!theme plain
skinparam sequenceMessageAlign center
skinparam responseMessageBelowArrow true

actor ":User" as User
participant ":Ui" as UI
participant ":FinBro" as FinBro
participant ":Parser" as Parser
participant ":IncomeCommand" as IncomeCommand
participant ":TransactionManager" as TransactionMgr
participant ":Income" as Income
participant ":Storage" as Storage

User -> UI : input command
activate UI

UI -> FinBro : readCommand()
activate FinBro

FinBro -> Parser : parseCommand(userInput)
activate Parser
note right: Parse "income 3000 d/Monthly salary t/work"

Parser -> IncomeCommand** : new IncomeCommand(amount, description, tags)
activate IncomeCommand
IncomeCommand --> Parser : command
deactivate IncomeCommand
Parser --> FinBro : command
deactivate Parser

FinBro -> IncomeCommand : execute(transactionManager, ui, storage)
activate IncomeCommand

IncomeCommand -> TransactionMgr : getTransactionDuplicates(amount, description)
activate TransactionMgr
TransactionMgr --> IncomeCommand : duplicates
deactivate TransactionMgr

note right of IncomeCommand: Check for duplicates

alt duplicates found
    IncomeCommand -> UI : warnDuplicate()
    activate UI
    UI --> IncomeCommand : confirmResult
    deactivate UI

    alt user cancels transaction
        IncomeCommand --> FinBro : "Transaction cancelled by user"
    end
end

IncomeCommand -> Income** : new Income(amount, description, tags)
activate Income
Income --> IncomeCommand : income
deactivate Income

IncomeCommand -> TransactionMgr : addTransaction(income)
activate TransactionMgr
TransactionMgr --> IncomeCommand
deactivate TransactionMgr

IncomeCommand -> Storage : saveTransactions(transactionManager)
activate Storage
Storage --> IncomeCommand
deactivate Storage

IncomeCommand --> FinBro : result message
deactivate IncomeCommand

FinBro -> UI : showMessage(result)
UI --> User : display result
deactivate UI
deactivate FinBro

@enduml