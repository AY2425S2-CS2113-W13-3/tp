@startuml
!theme plain
skinparam sequenceMessageAlign center
skinparam responseMessageBelowArrow true
skinparam lifelineStrategy nosolid

actor "User" as User
participant "UI" as UI
participant "FinBro" as FinBro
participant "Parser" as Parser
participant "BalanceCommand" as BalanceCommand
participant "TransactionManager" as TransactionMgr
participant "Storage" as Storage

User -> UI : input command
activate UI

UI -> FinBro : readCommand()
activate FinBro

FinBro -> Parser : parseCommand(userInput)
activate Parser
note right: Parse "balance" or "balance d/2023-01-01"

alt date parameter provided
    Parser -> Parser : Extract date parameter
    activate Parser
    note right: Self-call to extract date
    Parser --> Parser : date
    deactivate Parser

    create BalanceCommand
    Parser -> BalanceCommand : new BalanceCommand(date)
    activate BalanceCommand
else no date parameter
    create BalanceCommand
    Parser -> BalanceCommand : new BalanceCommand(null)
    activate BalanceCommand
end

BalanceCommand --> Parser : command

activate BalanceCommand
BalanceCommand --> Parser : command
deactivate BalanceCommand
Parser --> FinBro : command
deactivate Parser

FinBro -> BalanceCommand : execute(transactionManager, ui, storage)
activate BalanceCommand

alt date specified
    BalanceCommand -> TransactionMgr : getTotalIncomeFromDate(date)
    activate TransactionMgr
    TransactionMgr --> BalanceCommand : totalIncome
    deactivate TransactionMgr

    BalanceCommand -> TransactionMgr : getTotalExpensesFromDate(date)
    activate TransactionMgr
    TransactionMgr --> BalanceCommand : totalExpenses
    deactivate TransactionMgr
else no date
    BalanceCommand -> TransactionMgr : getTotalIncome()
    activate TransactionMgr
    TransactionMgr --> BalanceCommand : totalIncome
    deactivate TransactionMgr

    BalanceCommand -> TransactionMgr : getTotalExpenses()
    activate TransactionMgr
    TransactionMgr --> BalanceCommand : totalExpenses
    deactivate TransactionMgr
end

BalanceCommand -> BalanceCommand : formatBalanceMessage(totalBalance, totalIncome, totalExpenses, title)
activate BalanceCommand
note right: Self-call to format message
BalanceCommand --> BalanceCommand : formattedMessage
deactivate BalanceCommand

BalanceCommand --> FinBro : formatted balance message
deactivate BalanceCommand

FinBro -> UI : showMessage(result)
activate UI
UI --> User : display balance information
UI --> FinBro
deactivate UI
deactivate FinBro

@enduml